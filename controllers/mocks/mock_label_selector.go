// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/label_selector.go

// Package mock_controllers is a generated GoMock package.
package mock_controllers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWatchedObject is a mock of WatchedObject interface.
type MockWatchedObject struct {
	ctrl     *gomock.Controller
	recorder *MockWatchedObjectMockRecorder
}

// MockWatchedObjectMockRecorder is the mock recorder for MockWatchedObject.
type MockWatchedObjectMockRecorder struct {
	mock *MockWatchedObject
}

// NewMockWatchedObject creates a new mock instance.
func NewMockWatchedObject(ctrl *gomock.Controller) *MockWatchedObject {
	mock := &MockWatchedObject{ctrl: ctrl}
	mock.recorder = &MockWatchedObjectMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWatchedObject) EXPECT() *MockWatchedObjectMockRecorder {
	return m.recorder
}

// GetLabels mocks base method.
func (m *MockWatchedObject) GetLabels() map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLabels")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetLabels indicates an expected call of GetLabels.
func (mr *MockWatchedObjectMockRecorder) GetLabels() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLabels", reflect.TypeOf((*MockWatchedObject)(nil).GetLabels))
}
