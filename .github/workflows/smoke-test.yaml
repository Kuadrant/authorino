name: Smoke Tests

on:
  workflow_run:
    workflows:
      - Build and push image
    types:
      - completed

jobs:
  on-success:
    name: Smoke Tests
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
        id: go
      - name: Install jq
        run: sudo apt-get install jq
      - name: Install kind
        run: go install sigs.k8s.io/kind@v0.20.0
      - name: Create kind cluster
        run: kind create cluster --name authorino-smoke-tests
      - name: Install Authorino Operator
        run: |
          curl -sL https://raw.githubusercontent.com/Kuadrant/authorino-operator/main/utils/install.sh | bash -s
          kubectl -n authorino-operator wait --timeout=300s --for=condition=Available deployments --all
      - name: Install cert-manager
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.12.1/cert-manager.yaml
          kubectl -n cert-manager wait --timeout=300s --for=condition=Available deployments --all
      - name: Create the namespace
        run: |
          kubectl create namespace authorino
      - name: Create Authorino TLS certificates
        run: |
          curl -sSL https://raw.githubusercontent.com/Kuadrant/authorino/main/deploy/certs.yaml | sed "s/\$(AUTHORINO_INSTANCE)/authorino/g;s/\$(NAMESPACE)/authorino/g" | kubectl -n authorino apply -f -
      - name: Create Authorino instance
        run: |
          kubectl -n authorino apply -f -<<EOF
          apiVersion: operator.authorino.kuadrant.io/v1beta1
          kind: Authorino
          metadata:
            name: authorino
          spec:
            image: quay.io/kuadrant/authorino:latest
            clusterWide: false
            listener:
              tls:
                certSecretRef:
                  name: authorino-server-cert
            oidcServer:
              tls:
                certSecretRef:
                  name: authorino-oidc-server-cert
            logLevel: debug
            logMode: production
          EOF
      - name: Deploy Talker API
        run: kubectl -n authorino apply -f https://raw.githubusercontent.com/kuadrant/authorino-examples/main/talker-api/talker-api-deploy.yaml
      - name: Deploy Envoy proxy
        run: |
          kubectl -n authorino apply -f https://raw.githubusercontent.com/kuadrant/authorino-examples/main/envoy/envoy-tls-deploy.yaml
      - name: Deploy Keycloak
        run: |
          kubectl -n authorino apply -f https://raw.githubusercontent.com/kuadrant/authorino-examples/main/keycloak/keycloak-deploy.yaml
      - name: Run e2e tests
        env:
          NAMESPACE: authorino
          AUTHCONFIG: https://raw.githubusercontent.com/Kuadrant/authorino/main/tests/v1beta3/authconfig.yaml
          AUTHCONFIG_INVALID: https://raw.githubusercontent.com/Kuadrant/authorino/main/tests/v1beta3/authconfig-invalid.yaml
        run: |
          curl -sSL https://raw.githubusercontent.com/Kuadrant/authorino/main/tests/e2e-test.sh | bash
